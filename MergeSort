public class Solution {
  public int[] mergeSort(int[] array) {
    // Write your solution here
   int left = 0;
   int right = array.length - 1;
   if(array==null||array.length<=1) {
			return array;
		}
	 int[] helper = new int[array.length];
   mergeSort(array,left,right,helper);
    return array;
  }
  private void mergeSort(int[] array,int left, int right, int[] helper){
    if(left>=right){
     return;
    }
    
    int mid = left + (right-left)/2;
    mergeSort(array,left,mid,helper);
    mergeSort(array,mid+1,right,helper);
    
    for(int i =0;i<=right;i++){
     helper[i]=array[i];
    }
    int i = left; int j = mid+1; int k = left;
    while(i<=mid && j<=right){
      if(helper[i]<=helper[j]){
        array[k]=helper[i];
        i++;
      }
      else{
        array[k]=helper[j];
        j++;
      }
      k++;
    }
    
    while(i<=mid){
      array[k]=helper[i];
      i++;
      k++;
    }
  }
}
