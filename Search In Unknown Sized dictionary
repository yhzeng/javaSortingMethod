//Given a integer dictionary A of unknown size, where the numbers in the dictionary are sorted in ascending order, 
//determine if a given target integer T is in the dictionary. 
//Return the index of T in A, return -1 if T is not in A.

interface Dictionary {
    public Integer get(int index);
  }

public int search(Dictionary dict, int target) {
    // Write your solution here
    if(dict==null){
        return -1;
    }
    int left = 0, right = 1;
    while(dict.get(right)!=null && dict.get(right) < target){
        left = right;
        right = right * 10;

    }

    return search(dict, target, left, right);
  }

  private int search(Dictionary dict, int target, int left, int right){
      
      while(left < right - 1){
     //while(left <= right){
          int mid = left + (right - left)/2;
          if(dict.get(mid) == null || dict.get(mid) > target){
              right = mid - 1;
          }else if(dict.get(mid) < target){
              left = mid + 1;
          }else{
              return mid;
          }
      }
      if(dict.get(left)!=null && dict.get(left) == target ){
          return left;
      }
      if(dict.get(right)!=null && dict.get(right) == target){
          return right;
      }
      return -1;
  }
